<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Use Cases" data-mc-conditions="Danube.Browser">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>
			Application commands
		</title>
        <link href="../Resources/Stylesheets/DocLoc.css" rel="stylesheet" type="text/css" />
        <script src="../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <h1><a name="kanchor33"></a>Application commands</h1>
        <p>Each <a href="../Concepts/DANUBE_APPLICATION_COMMANDS.htm">application command</a> is associated with one command set.</p>
        <h2>Prerequisites</h2>
        <p>You've <a href="DANUBE_SPEECH_ENABLE_BROWSER.htm">initialized speech recognition for a web page</a>.</p>
        <h2>Procedure</h2>
        <p>To define application commands, do the following:</p>
        <ol>
            <li value="1">Create a command set:</li>
            <p class="indent2"><code>var cmdSetId = NUSA_createCommandSet("My Test CommandSet ", " Description of my test command set ");</code>
            </p>
            <p class="compact3"><code>My Test CommandSet</code> - a human-readable title for your command set; displayed in the personalization &amp; help window.</p>
            <p class="indent3"><code>Description of my test command set</code> - a human-readable description; displayed in the personalization &amp; help window.</p>
            <p class="note"><b>Note:</b> The command set created is enabled by default; call <code>NUSA_enableCommandSet(cmdSetId, enabled)</code> to enable/disable it.</p>
            <li value="2">Create application commands in the command set: </li>
            <p class="indent2"><code>NUSA_createCommand(cmdSetId, "myTestCommandId", "this is a test", "THIS&#160;IS&#160;A&#160;TEST", "My test command description.");</code> </p>
            <p class="compact3"><code>myTestCommandId</code> - the unique identifier of the application command; this is the identifier that your app will receive in the application command event callback when it's recognized. </p>
            <p class="warning" style="margin-left:4.6em"><span class="important">Important:</span>&#160;Make sure the application command ID doesn't contain spaces and doesn't start with a number.</p>
            <p class="compact3"><code>this is a test</code> - the application command phrase (that's said to initiate the application command); displayed in the personalization &amp; help window if no display string is set.</p>
            <p class="compact3"><code>THIS&#160;IS&#160;A&#160;TEST</code> - the application command display string; displayed in the personalization &amp; help window. If you don't want to set a display string, pass a null value or empty string.</p>
            <p class="indent3"><code>My test command description</code> - a human-readable description; displayed in the personalization &amp; help window.</p>
        </ol>
        <p class="note"><b>Note:</b> The command created is enabled by default; call <code>NUSA_enableCommand(myTestCommandId, enabled)</code> to enable/disable it.</p>
        <h3>Standard placeholders</h3>
        <p>Standard placeholders are delivered with <span class="mc-variable DocLoc.DM_SK variable">Dragon Medical SpeechKit</span>. To add a standard placeholder to an application command, add its identifier to the phrase of the command:</p>
        <p><code>NUSA_createCommand("myScrollCommand", "scroll down &lt;standard:cardinal0-100&gt; pages", "scroll down &lt;standard:cardinal0-100&gt; pages","Scrolls down the specified number of pages.");</code><![CDATA[  ]]></p>
        <p class="note"><b>Note:</b> If you use a display string, the placeholder in the display string and in the phrase must be the same (see: <a href="../Concepts/DANUBE_APPLICATION_COMMANDS.htm#Recommen">Recommendations for phrases</a>).</p>
        <p>For a list of standard placeholders, see: <a href="../Concepts/DANUBE_APPLICATION_COMMANDS.htm#StandardPlaceholders">Standard placeholders</a>.</p>
        <h3>Application-defined placeholders</h3>
        <p>When designing the VUI for your app, you can provide one or more commands. For example, you can define voice commands that refer to a patient name: <span class="command">show allergies for mister Pink</span> or <span class="command">create new note for mister Orange</span>. To do this, you can create an application-defined placeholder and add it to application commands as needed. Proceed as follows:</p>
        <ol>
            <li value="1">
                <p>Create an application command with a placeholder defined in angled brackets for the phrase parameter:</p>
                <p><code>NUSA_createCommand(cmdSetId ,"myShowPatientCommand", "show me &lt;patientId&gt;", "show me &lt;patientId&gt;", "Shows data for the corresponding patient.");</code>
                </p>
                <p class="indent2"><code>&lt;patientId&gt;</code> is the unique identifier of the placeholder.</p>
            </li>
            <p class="note"><b>Note:</b> The same placeholder can be used in different commands.</p>
            <li value="2">Create the placeholder:</li>
            <p class="compact2"><code>NUSA_createCommandPlaceholder("patientId", "Name of the patient");</code> </p>
            <p class="compact3"><code>patientId</code> - the unique identifier of the placeholder that is used in application command phrases; must not contain spaces and/or numbers.</p>
            <p class="indent3"><code>Name of the patient</code> - a human-readable description; displayed in the personalization &amp; help window.</p>
            <li value="3">Set its phrases and values.</li>
            <li value="4">Make sure that <code>values[index]</code> corresponds to <code>spokenForms[index]</code>:</li>
            <p class="compact2"><code>var values = new Array();</code> </p>
            <p class="compact2"><code>var spokenForms = new Array();</code> </p>
            <p class="compact3"><code>values.push("PTN.48389488");</code> </p>
            <p class="compact3"><code>spokenForms.push("Mr. Pink");</code> </p>
            <p class="compact3"><code>values.push("PTN.48389488");</code> </p>
            <p class="compact3"><code>spokenForms.push("Mr. Orange");</code> </p>
            <p class="indent2"><code>NUSA_setCommandPlaceholderValues("patientId", values, spokenForms);</code> </p>
            <p class="compact3"><code>"PTN.48389488", "PTN.48323466"</code> - an array of strings containing the values of the placeholder. </p>
            <p class="indent3"><code>"Mr. Pink", "Mr. Orange"</code> - an array of strings containing the corresponding spoken forms. </p>
            <p class="indent2">The number of elements in the two arrays must be the same. In this example, the "patient" placeholder can have two values, PTN.48389488 if the user says <span class="command">mister Pink</span> or PTN.48323466 if the user says <span class="command">mister Orange</span>.</p>
        </ol>
        <p class="note"><b>Note:</b> If you use a display string, the placeholder in the display string and in the phrase must be the same. The value of a placeholder can be changed. The new value will become active after the next <code>NUSA_reinitializeVuiForm()</code> call.</p>
        <h3>Recognizing application commands</h3>
        <p><span class="mc-variable DocLoc.DM_SK variable">Dragon Medical SpeechKit</span> notifies your app about recognized application commands; the <code>NUSA_onCommandRecognized()</code> function is called. For more information, see: <a href="DANUBE_EVENTS_BROWSER.htm#VuiContr">VuiController events</a>. For your app to receive this notification, do the following:</p>
        <ol>
            <li value="1">
                <p>Implement the <code>NUSA_onCommandRecognized()</code> function. This will be called back when an application command is recognized.</p>
            </li>
            <p class="compact2"><code>function NUSA_onCommandRecognized(cmdId, spokenText, content, placeholderIds, placeholderValues)</code>
            </p>
            <p class="indent2">In <span class="mc-variable DocLoc.SM_Short variable">SpeechMagic</span>-based systems, the <code>spokenText</code> parameter is empty in command mode.<br /></p>
            <li value="2">In <code>NUSA_onCommandRecognized()</code>, check for the ID of the recognized application command.</li>
            <p class="compact2"><code>if (cmdId =="myShowPatientCommand")) {</code> </p>
            <li value="3">	Process the recognized placeholder values.</li>
        </ol>
        <p class="compact2"><code>if (placeholderIds[0] == "patientId") { // the unique identifier of the placeholder</code> </p>
        <p class="compact3"><code>var patientName = placeholderValues[0];</code> </p>
        <p class="compact2"><code>}</code> </p>
        <p class="indent2">If you're using more placeholder values or several placeholders in one command, step through as follows:</p>
        <p class="compact2"><code>for (var i = 0; i &lt; placeholderIds.length; ++i) {</code> </p>
        <p class="compact2"><code>if (placeholderIds[i] == "patientId") { // the unique identifier of the placeholder</code> </p>
        <p class="compact3"><code>var patientName = placeholderValues[i];</code> </p>
        <p class="compact2"><code>}</code> </p>
        <p class="compact2"><code>else if (placeholderIds[i] == "anotherId") {</code> </p>
        <p class="compact3"><code>var data = placeholderValues[i];</code> </p>
        <p class="compact2"><code>}</code> </p>
        <p class="note"><b>Note:</b> The procedure above also applies for commands with standard placeholders. Standard placeholders delivered with <span class="mc-variable DocLoc.DM_SK variable">Dragon Medical SpeechKit</span> have predefined keys, for more information, see: <a href="../Concepts/DANUBE_APPLICATION_COMMANDS.htm#StandardPlaceholders">Standard placeholders</a>.</p>
        <h2>Remarks</h2>
        <ul>
            <li>Commands can have multiple phrases; call the <code>NUSA_createCommand()</code> method multiple times for the same ID, passing the phrases you want defined for the application command.</li>
            <li>If your application wants to modify attributes of application commands or command sets, (for example, add new application commands, enable/disable application commands or change placeholder values after the end user has already used speech recognition); apply the changes to the attributes by calling <code>NUSA_reinitializeVuiForm()</code>. It's best practice to do all changes before applying them via <code>NUSA_reinitializeVuiForm()</code>.</li>
            <li>
                <p>If you need commands active immediately on creation of a form, the <code>NUSA_createCommand()</code> method must be called while handling the <code>NUSA_configure()</code> function. In this case <code>NUSA_reinitializeVuiForm()</code> must not be called.</p>
            </li>
            <li>Your app is notified when an application command is recognized via a <code>VuiController</code> <a href="DANUBE_EVENTS_BROWSER.htm">event callback</a>.</li>
            <li>
                <p>To enable/disable a command set, call the <code>NUSA_enableCommandSet(id, enabled)</code> method.</p>
            </li>
            <li>To enable/disable individual commands in a command set, call the <code>NUSA_enableCommand(id, enabled)</code> method with the corresponding command ID.</li>
            <li>
                <p>You can speech-enable your app UI even if no speech-enabled controls are active.</p>
            </li>
            <li>To change the placeholder in an application command, use the <code>NUSA_clearCommandPlaceholderValues()</code> method. Once the placeholder is empty, you can add new phrases and values to the placeholder.</li>
        </ul>
        <h3>See also</h3>
        <p class="indent2"><a href="../Concepts/DANUBE_VOICE_COMMANDS.htm">Voice commands</a>
        </p>
    </body>
</html>