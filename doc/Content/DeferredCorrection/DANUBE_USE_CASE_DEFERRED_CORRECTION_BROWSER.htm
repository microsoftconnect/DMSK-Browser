<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Use Cases" data-mc-conditions="Danube.Browser">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Print.css" rel="stylesheet" type="text/css" data-mc-generated="True" /><title>Deferred correction use case</title>
        <link href="../Resources/Stylesheets/DocLoc.css" rel="stylesheet" type="text/css" />
        <script src="../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/foundation.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
    </head>
    <body>
        <h1><a name="kanchor25"></a>Deferred correction use case</h1>
        <p>For more information on deferred correction, see:</p>
        <ul>
            <li>
                <p><a href="DANUBE_CONCEPT_DEFERRED_CORRECTION.htm">Deferred correction concept</a>
                </p>
            </li>
        </ul>
        <h2>Implementation procedure</h2>
        <h3>Fields</h3>
        <p><b>Note:</b> Each field within a document is identified by a unique ID provided by the integration. The same field IDs must be used throughout the document's workflow.</p>
        <p>For each field in the document, add the <code>data-nusa-document-field-id</code> attribute and provide a unique value. Example:</p>
        <p><pre class="example">
&lt;input ... data-nusa-document-field-id="inputFieldId" /&gt;
&lt;textarea ... data-nusa-document-field-id="textareaFieldId"&gt;&lt;/textarea&gt;</pre>
        </p>
        <h3>Initialization</h3>
        <p>If your application <a href="../BrowserUseCases/DANUBE_SPEECH_ENABLE_BROWSER.htm">implements <code>NUSA_configure()</code></a>, configure your application for deferred correction as follows:</p>
        <ol>
            <li value="1">
                <p>Add <span class="mc-variable DocLoc.DM_SK variable">Dragon Medical SpeechKit</span> to your web page header. Use the deferred-correction URL that corresponds to the Nuance-hosted system you're connecting to and the release channel you're using. For more information, see&#160;<a href="../BrowserIntroduction/DANUBE_RELEASE_CHANNELS_BROWSER.htm#Deferred_correction">Release channels</a>.</p>
            </li>
            <li value="2">
                <p>Set the following variables in your implementation of <code>NUSA_configure()</code>:</p>
                <p class="compact2"><code>NUSA_documentMode</code> - use the <code>NUSA_mode</code> enum; default value: <code>NUSA_mode.author</code>.</p>
                <p class="indent2"><code>NUSA_documentCredentials</code> - an object containing the document ID and document token.</p>
            </li>
        </ol>
        <p><pre class="example">
function NUSA_configure() {
    ... 
    NUSA_documentMode = this.user.type === correctionist ? NUSA_mode.correctionist : NUSA_mode.author;
    NUSA_documentCredentials = {
        id: "&lt;document ID&gt;",
        token: "&lt;document token&gt;",
    };
    ...
}</pre>
        </p>
        <p><b>Note:</b> <code>NUSA_documentMode</code> can only be set during initialization; changing its value later will have no effect.</p>
        <h3>Deferred initialization</h3>
        <p>If your application doesn't implement <code>NUSA_configure()</code>, initialize Dragon Medical SpeechKit for deferred correction as follows:</p>
        <ol>
            <li value="1">
                <p>Add <span class="mc-variable DocLoc.DM_SK variable">Dragon Medical SpeechKit</span> to your web page header. Use the deferred-correction URL that corresponds to the Nuance-hosted system you're connecting to and the release channel you're using. For more information, see&#160;<a href="../BrowserIntroduction/DANUBE_RELEASE_CHANNELS_BROWSER.htm#Deferred_correction">Release channels</a>.</p>
            </li>
            <li value="2">
                <p>Among the usual set of configuration variables, set the deferred correction variables:</p>
                <p class="indent2"><code>NUSA_documentMode</code> - use the <code>NUSA_mode</code> enum; default value: <code>NUSA_mode.author</code>.</p>
            </li>
            <li value="3">
                <p>Call <code>NUSA_initialize()</code> and provide the document ID and document token as an object parameter.</p>
            </li>
        </ol>
        <p><pre class="example">
function initialize() {
    ...	
    NUSA_documentMode = this.user.type === correctionist ? NUSA_mode.correctionist : NUSA_mode.author;	 
    NUSA_initialize(null, {
        id: "&lt;document ID&gt;",
        token: "&lt;document token&gt;",
    });
    ...
}</pre>
        </p>
        <h3><a name="Closing"></a>Closing</h3>
        <p>A document must always be closed once the integration is finished with it.</p>
        <ol>
            <li value="1">
                <p>Call <code>NUSA_closeVuiForm(closeCompletedCallback)</code>.</p>
            </li>
            <li value="2">
                <p>If <code>NUSA_closeVuiForm()</code> returns <code>true</code>, wait for your <code>closeCompletedCallback</code> callback to be invoked before continuing.</p>
            </li>
        </ol>
        <p><pre class="example">
function onVuiFormClosed() {
    // safe to continue	 
}
function close() {
    ...
    if (NUSA_closeVuiForm(onVuiFormClosed)) {
        // wait for onVuiFormClosed()
    } else {
        // safe to continue
    }
    ...
}</pre>
        </p>
        <h3>Opening after closing</h3>
        <p>If your app enables users to edit multiple documents without reloading or  navigating to another page (single-page application), you can open the next document as follows:</p>
        <ol>
            <li value="1">
                <p>Make sure the previous document has been <a href="#Closing">closed</a>. </p>
            </li>
            <li value="2">
                <p>Load the new document to your page.</p>
            </li>
            <li value="3">
                <p>Call <code>NUSA_initializeVuiForm()</code> and provide the document ID and document token as an object parameter.</p>
            </li>
        </ol>
        <p><pre class="example">
function open() {
    ...
    NUSA_initializeVuiForm({
        id: "&lt;document ID&gt;", 
        token: "&lt;document token&gt;",
    });
    ...
}</pre>
        </p>
        <h2>Remarks</h2>
        <ul>
            <li>
                <p>Fields can be added or removed via <code>NUSA_reinitializeVuiForm()</code>; only fields currently initialized with <span class="mc-variable DocLoc.DM_SK variable">Dragon Medical SpeechKit</span> will play back.</p>
            </li>
            <li>Documents with multiple fields are supported.</li>
            <li>When a document is reopened, the text must be restored by the integration.</li>
            <li>Your integration must always provide a document ID when creating a document with workflow support.</li>
            <li>A <a href="DANUBE_CONCEPT_DEFERRED_CORRECTION.htm#Document_tokens">document token</a> must be provided when using deferred correction.</li>
            <li>
                <p>Multiple authors recording into a document isn't supported; your integration must ensure this can't occur.</p>
            </li>
        </ul>
        <h3 data-mc-conditions="Danube.Browser">See also</h3>
        <p class="compact" data-mc-conditions="Danube.Browser"><a href="DANUBE_CONCEPT_DEFERRED_CORRECTION.htm">Deferred correction concept</a>
        </p>
        <p data-mc-conditions="Danube.Browser"><a href="../BrowserSamples/DANUBE_SAMPLE_DEFERRED_CORRECTION_BROWSER.htm">Deferred correction sample</a>
        </p>
    </body>
</html>